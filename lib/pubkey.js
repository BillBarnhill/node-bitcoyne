// Generated by IcedCoffeeScript 1.7.1-e
(function() {
  var base58, createHash, hash160, hash160_to_bc_address;

  createHash = require('crypto').createHash;

  hash160 = require('./crypto').hash160;

  base58 = require('kbpgp').base58;

  exports.hash160_to_bc_address = hash160_to_bc_address = function(h160, version) {
    var addr, h, i, raw, vbuf, vh160, x, _i;
    if (version == null) {
      version = 0;
    }
    h160 = new Buffer(h160, 'binary');
    vbuf = new Buffer([0]);
    vbuf.writeUInt8(version, 0);
    vh160 = Buffer.concat([vbuf, h160]);
    h = new Buffer(vh160);
    for (i = _i = 0; _i < 2; i = ++_i) {
      raw = (createHash('sha256')).update(h).digest();
      h = new Buffer(raw, 'binary');
    }
    addr = Buffer.concat([vh160, h.slice(0, 4)]);
    x = base58.encode(addr);
    return x;
  };

  exports.pubkey_to_bc_address = function(pubkey, version) {
    return hash160_to_bc_address(hash160(pubkey), version);
  };

}).call(this);
